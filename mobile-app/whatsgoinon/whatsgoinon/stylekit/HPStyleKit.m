//
//  StyleKitName.m
//  ProjectName
//
//  Created by AuthorName on 11/17/14.
//  Copyright (c) 2014 CompanyName. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "HPStyleKit.h"


@implementation HPStyleKit

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawAmbassadorFlagInRect: (CGRect)frame;
{
    //// Color Declarations
    UIColor* color0 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];


    //// Subframes
    CGRect group2 = CGRectMake(CGRectGetMinX(frame) + floor(CGRectGetWidth(frame) * 0.07152 - 0.3) + 0.8, CGRectGetMinY(frame) + floor(CGRectGetHeight(frame) * 0.04803) + 0.5, floor(CGRectGetWidth(frame) * 0.95269 - 0.36) - floor(CGRectGetWidth(frame) * 0.07152 - 0.3) + 0.06, floor(CGRectGetHeight(frame) * 0.94685 - 0.3) - floor(CGRectGetHeight(frame) * 0.04803) + 0.3);


    //// Group 2
    {
        //// Group
        {
            //// Bezier 2 Drawing
            UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
            [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group2) + 0.99508 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.38586 * CGRectGetHeight(group2))];
            [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group2) + 0.72537 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.40232 * CGRectGetHeight(group2)) controlPoint1: CGPointMake(CGRectGetMinX(group2) + 0.90327 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.39573 * CGRectGetHeight(group2)) controlPoint2: CGPointMake(CGRectGetMinX(group2) + 0.81719 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.40561 * CGRectGetHeight(group2))];
            [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group2) + 0.50731 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.38586 * CGRectGetHeight(group2)) controlPoint1: CGPointMake(CGRectGetMinX(group2) + 0.65077 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.39902 * CGRectGetHeight(group2)) controlPoint2: CGPointMake(CGRectGetMinX(group2) + 0.58191 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.39573 * CGRectGetHeight(group2))];
            [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group2) + 0.08265 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.38586 * CGRectGetHeight(group2)) controlPoint1: CGPointMake(CGRectGetMinX(group2) + 0.36958 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.36281 * CGRectGetHeight(group2)) controlPoint2: CGPointMake(CGRectGetMinX(group2) + 0.21464 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.35294 * CGRectGetHeight(group2))];
            [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group2) + 0.08839 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.07642 * CGRectGetHeight(group2)) controlPoint1: CGPointMake(CGRectGetMinX(group2) + 0.06544 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.28381 * CGRectGetHeight(group2)) controlPoint2: CGPointMake(CGRectGetMinX(group2) + 0.09987 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.18176 * CGRectGetHeight(group2))];
            [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group2) + 0.08265 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.06325 * CGRectGetHeight(group2)) controlPoint1: CGPointMake(CGRectGetMinX(group2) + 0.08839 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.07313 * CGRectGetHeight(group2)) controlPoint2: CGPointMake(CGRectGetMinX(group2) + 0.08265 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.06325 * CGRectGetHeight(group2))];
            [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group2) + 0.44992 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.05008 * CGRectGetHeight(group2)) controlPoint1: CGPointMake(CGRectGetMinX(group2) + 0.20316 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.04021 * CGRectGetHeight(group2)) controlPoint2: CGPointMake(CGRectGetMinX(group2) + 0.32367 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.04350 * CGRectGetHeight(group2))];
            [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group2) + 0.75406 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.08300 * CGRectGetHeight(group2)) controlPoint1: CGPointMake(CGRectGetMinX(group2) + 0.55321 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.05996 * CGRectGetHeight(group2)) controlPoint2: CGPointMake(CGRectGetMinX(group2) + 0.65077 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.07642 * CGRectGetHeight(group2))];
            [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group2) + 0.99508 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.06325 * CGRectGetHeight(group2)) controlPoint1: CGPointMake(CGRectGetMinX(group2) + 0.83440 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.08629 * CGRectGetHeight(group2)) controlPoint2: CGPointMake(CGRectGetMinX(group2) + 0.92048 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.08300 * CGRectGetHeight(group2))];
            [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group2) + 0.98934 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.37269 * CGRectGetHeight(group2)) controlPoint1: CGPointMake(CGRectGetMinX(group2) + 1.01230 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.16530 * CGRectGetHeight(group2)) controlPoint2: CGPointMake(CGRectGetMinX(group2) + 0.97787 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.26735 * CGRectGetHeight(group2))];
            [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group2) + 0.99508 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.38586 * CGRectGetHeight(group2)) controlPoint1: CGPointMake(CGRectGetMinX(group2) + 0.98934 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.37598 * CGRectGetHeight(group2)) controlPoint2: CGPointMake(CGRectGetMinX(group2) + 0.99508 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.38256 * CGRectGetHeight(group2))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group2) + 0.99508 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.38586 * CGRectGetHeight(group2))];
            [bezier2Path closePath];
            [UIColor.whiteColor setFill];
            [bezier2Path fill];
            [color0 setStroke];
            bezier2Path.lineWidth = 1.32;
            [bezier2Path stroke];
        }


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = UIBezierPath.bezierPath;
        [bezier4Path moveToPoint: CGPointMake(CGRectGetMinX(group2) + 0.10289 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 1.00000 * CGRectGetHeight(group2))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group2) + 0.02923 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 1.00000 * CGRectGetHeight(group2))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group2) + 0.00000 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.98318 * CGRectGetHeight(group2)) controlPoint1: CGPointMake(CGRectGetMinX(group2) + 0.01286 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 1.00000 * CGRectGetHeight(group2)) controlPoint2: CGPointMake(CGRectGetMinX(group2) + 0.00000 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.99260 * CGRectGetHeight(group2))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group2) + 0.00000 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.01682 * CGRectGetHeight(group2))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group2) + 0.02923 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.00000 * CGRectGetHeight(group2)) controlPoint1: CGPointMake(CGRectGetMinX(group2) + 0.00000 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.00740 * CGRectGetHeight(group2)) controlPoint2: CGPointMake(CGRectGetMinX(group2) + 0.01286 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.00000 * CGRectGetHeight(group2))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group2) + 0.10289 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.00000 * CGRectGetHeight(group2))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group2) + 0.13212 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.01682 * CGRectGetHeight(group2)) controlPoint1: CGPointMake(CGRectGetMinX(group2) + 0.11926 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.00000 * CGRectGetHeight(group2)) controlPoint2: CGPointMake(CGRectGetMinX(group2) + 0.13212 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.00740 * CGRectGetHeight(group2))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group2) + 0.13212 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.98318 * CGRectGetHeight(group2))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group2) + 0.10289 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 1.00000 * CGRectGetHeight(group2)) controlPoint1: CGPointMake(CGRectGetMinX(group2) + 0.13212 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 0.99226 * CGRectGetHeight(group2)) controlPoint2: CGPointMake(CGRectGetMinX(group2) + 0.11867 * CGRectGetWidth(group2), CGRectGetMinY(group2) + 1.00000 * CGRectGetHeight(group2))];
        [bezier4Path closePath];
        bezier4Path.miterLimit = 4;

        [color0 setFill];
        [bezier4Path fill];
    }
}

+ (void) drawMaybeCheckmark
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();
    
    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];
    
    //// Rectangle Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 13.54, 12.86);
    CGContextRotateCTM(context, 45 * M_PI / 180);
    
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 15, 5)];
    [color setFill];
    [rectanglePath fill];
    
    CGContextRestoreGState(context);
    
    
    //// Rectangle 2 Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 38.75, 9.79);
    CGContextRotateCTM(context, 135 * M_PI / 180);
    
    UIBezierPath* rectangle2Path = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 25, 5)];
    [color setFill];
    [rectangle2Path fill];
    
    CGContextRestoreGState(context);
}


@end
